#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Train RF Model over the Dataset generated by BERT-PSIE

@author: matteo
"""

import numpy as np
import pandas as pd

from joblib import dump, load

from sklearn.ensemble import RandomForestRegressor
from pymatgen.core import Composition

from descriptors import dumpCompositionalDescriptors
from descriptors.utils import ELEMENTS

MIN_TH = 0
MAX_TH = 1400

data = pd.read_csv("./Tc_dataset.csv")

X_train = []
y_train = []

for i in range(len(data["compound"])):
    if data["compound"][i] not in ELEMENTS:

        tc_a = np.array(
            [
                float(item)
                for item in data["Tc"][i].replace("[", "").replace("]", "").split(" ")
                if item != ""
            ]
        )

        if len(tc_a) > 0:
            try:
                tc = np.median(tc_a[(tc_a > MIN_TH) & (tc_a < MAX_TH)])

                if not np.isnan(tc):
                    y_train.append(tc)
                    X_train.append(Composition(data["compound"][i]))
            except:
                print("err  ", tc)

index = dumpCompositionalDescriptors(X_train, out_name="X_train")
np.save("y_train.npy", y_train)

np.random.seed(9)

X_train = np.load("X_train.npy")
y_train = np.load("y_train.npy")

model = RandomForestRegressor()
model.fit(X_train, y_train)

dump(model, "RF_model.joblib")